#!/bin/sh
LIBS=""
for JAR in /opt/lib/*.jar
do
  LIBS=$LIBS:$JAR
done
for JAR in /opt/aws-java-sdk/lib/*.jar
do
  LIBS=$LIBS:$JAR
done
exec /opt/scala/bin/scala -save -cp $LIBS "$0" "$@"
!#
 
import com.amazonaws.auth.BasicAWSCredentials
import com.amazonaws.services.s3.AmazonS3Client
import com.amazonaws.services.s3.model.PutObjectRequest
import com.amazonaws.services.s3.model.ObjectMetadata
import java.io.File
import java.util.logging.Level
import java.util.logging.LogManager
 
import scala.io.Source
import scala.io.Source.fromFile
 
def parseProperties(filename: String): Map[String,String] = {
    val lines = fromFile(filename).getLines.toSeq
    val cleanLines = lines.map(_.trim).filter(!_.startsWith("#")).filter(_.contains("="))
    cleanLines.map(line => { val Array(a,b) = line.split("=",2); (a.trim, b.trim)}).toMap
}
 
 
println("Started Publish to S3 Script")
 
val cfgKeys = parseProperties("cf.cfg")
val PROJECT = cfgKeys("project")
val BUCKET_NAME = cfgKeys("bucket")
 
val FILE_RESOURCES = "cloudinit/" + PROJECT + "/" + PROJECT + "-resources"
val DIR_CLOUDCONFIG = PROJECT + "-cloudconfig"
val DIR_SETUP = PROJECT + "-setup"
 
val mapKeys = parseProperties(sys.env("AWS_CREDENTIAL_FILE")); 
val ACCESS_KEY = mapKeys("AWSAccessKeyId") 
val SECRET_KEY = mapKeys("AWSSecretKey") 
 
val client = new AmazonS3Client(new BasicAWSCredentials(ACCESS_KEY, SECRET_KEY)) 
client.deleteObject(BUCKET_NAME, "cloudinit/cloudconfig")
client.putObject(BUCKET_NAME, "cloudinit/cloudconfig", new File("cloudinit/cloudconfig"))
 
client.deleteObject(BUCKET_NAME, "cloudinit/setup")
client.putObject(BUCKET_NAME, "cloudinit/setup", new File("cloudinit/setup"))
 
println("Updated files to S3" + ACCESS_KEY )
