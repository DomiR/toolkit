#!/bin/sh
LIBS=""
for JAR in /opt/lib/*.jar
do
  LIBS=$LIBS:$JAR
done
for JAR in /opt/aws-java-sdk/lib/*.jar
do
  LIBS=$LIBS:$JAR
done
exec /opt/scala/bin/scala -save -cp $LIBS "$0" "$@"
!#
 
import com.amazonaws.auth.BasicAWSCredentials
import com.amazonaws.services.s3.AmazonS3Client
import com.amazonaws.services.cloudformation.AmazonCloudFormationClient
import com.amazonaws.services.cloudformation.model.CreateStackRequest
import com.amazonaws.services.cloudformation.model.Parameter
import java.io.File
import java.net.URL
import java.util.Date
import java.util.logging.Level
import java.util.logging.LogManager
 
import scala.io.Source
import scala.io.Source.fromFile
 
def parseProperties(filename: String): Map[String,String] = {
    val lines = fromFile(filename).getLines.toSeq
    val cleanLines = lines.map(_.trim).filter(!_.startsWith("#")).filter(_.contains("="))
    cleanLines.map(line => { val Array(a,b) = line.split("=",2); (a.trim, b.trim)}).toMap
}
 
println("Started Cloud Formation Stack")
 
val mapKeys = parseProperties(sys.env("AWS_CREDENTIAL_FILE")); 
val cfgKeys = parseProperties("cf.cfg")
 
val ACCESS_KEY = mapKeys("AWSAccessKeyId") 
val SECRET_KEY = mapKeys("AWSSecretKey") 
val PROJECT = cfgKeys("project")
val BUCKET_NAME = cfgKeys("bucket")
val STACK_NAME = cfgKeys("stack")
val AMI_TEMPLATE = cfgKeys("template")
val PEM_KEY = cfgKeys("pem") 
val dateNow = new Date()
 
val credentials = new BasicAWSCredentials(ACCESS_KEY, SECRET_KEY)
val cfClient = new AmazonCloudFormationClient(credentials) 
val s3Client = new AmazonS3Client(credentials)
 
val cloudConfigURL = s3Client.generatePresignedUrl(BUCKET_NAME, "cloudinit/cloudconfig", dateNow)
val resourcesURL = s3Client.generatePresignedUrl(BUCKET_NAME, "cloudinit/resources", dateNow)
val setupURL = s3Client.generatePresignedUrl(BUCKET_NAME, "cloudinit/setup", dateNow)
 
val createStackResult = cfClient.createStack(new CreateStackRequest()
  .withStackName(STACK_NAME)
  .withTemplateBody(new File(AMI_TEMPLATE).text)
  .withParameters(
    new Parameter().withParameterKey("KeyName").withParameterValue(PEM_KEY),
    new Parameter().withParameterKey("UserData").withParameterValue(s"""#include
$cloudConfigURL
$resourcesURL
$setupURL
 """)
))
 
println("Creating Cloud Formation Stack: " + createStackResult.stackId )
